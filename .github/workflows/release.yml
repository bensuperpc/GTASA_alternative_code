name: "tagged-release"

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
      # Disable linux-armv6
        arch_name: [android-arm, android-arm64, android-x86, android-x86_64, web-wasm, linux-arm64, linux-arm64-musl, linux-armv5, linux-armv5-musl, linux-armv6-musl, linux-armv7, linux-armv7a, linux-armv7l-musl, linux-x64-clang, linux-s390x, linux-x64, linux-x86, linux-mips, linux-ppc64le, windows-static-x64, windows-static-x64-posix, windows-static-x86, windows-shared-x64, windows-shared-x64-posix, windows-shared-x86, linux-riscv64, linux-riscv32]
    steps:
      - name: "📥 Checkout Code"
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: "🛠️ cmake"
        run: ./builder/cmake.sh ${{ matrix.arch_name }}
      - name: "🛠️ make"
        if: matrix.arch_name != 'web-wasm'
        run: ./builder/makefile.sh ${{ matrix.arch_name }}
      - name: "🛠️ docker"
        run: make docker
      - name: "🛠️ docker"
        run: make docker
      - name: "compress"
        run: cat build-${{ matrix.arch_name }}/gta | xz -e9 -T0 -C sha256 > gta-${{ matrix.arch_name }}.xz
      - name: "test archive"
        run: xz -tvv gta-${{ matrix.arch_name }}.xz
      - name: "save binaries"
        if: matrix.arch_name != 'web-wasm'
        uses: actions/upload-artifact@v2
        with:
          name: docker-artifact
          path: gta-${{ matrix.arch_name }}.xz
          retention-days: 1        
  release:
    name: release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "📥 Checkout Code"
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: get artifact
        uses: actions/download-artifact@v2
        with:
          name: docker-artifact
          path: .
      - uses: "marvinpinto/action-automatic-releases@latest"
        name: upload to github
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            LICENSE
            *.xz