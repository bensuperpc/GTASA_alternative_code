name: "tagged-release"

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
  workflow_dispatch:

jobs:
  build:
    name: dockcross ${{ matrix.dockcross.image_name }} ${{ matrix.build_type }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dockcross:
          - { image_name: android-arm, cmake_arg: "" }
          - { image_name: android-arm64, cmake_arg: "" }
          - { image_name: android-x86, cmake_arg: "" }
          - { image_name: android-x86_64, cmake_arg: "" }
          - { image_name: web-wasm, cmake_arg: "" }
          - {
              image_name: web-wasi,
              cmake_arg: "-DCMAKE_CXX_FLAGS='${CMAKE_CXX_FLAGS} -fno-exceptions'",
            }
          - { image_name: linux-arm64, cmake_arg: "" }
          - { image_name: linux-arm64-lts, cmake_arg: "" }
          - { image_name: linux-arm64-full, cmake_arg: "" }
          - { image_name: linux-arm64-musl, cmake_arg: "" }
          - { image_name: linux-armv5, cmake_arg: "" }
          - { image_name: linux-armv5-musl, cmake_arg: "" }
          - { image_name: linux-armv6, cmake_arg: "" }
          - { image_name: linux-armv6-lts, cmake_arg: "" }
          - { image_name: linux-armv6-musl, cmake_arg: "" }
          - { image_name: linux-armv7, cmake_arg: "" }
          - { image_name: linux-armv7-lts, cmake_arg: "" }
          - { image_name: linux-armv7a, cmake_arg: "" }
          - { image_name: linux-armv7l-musl, cmake_arg: "" }
          - { image_name: linux-x64, cmake_arg: "" }
          - { image_name: linux-x64-clang, cmake_arg: "" }
          - { image_name: linux-x64-tinycc, cmake_arg: "" }
          - { image_name: linux-x86_64-full, cmake_arg: "" }
          - { image_name: linux-x86, cmake_arg: "" }
          - { image_name: linux-s390x, cmake_arg: "" }
          - { image_name: linux-mips, cmake_arg: "" }
          - { image_name: linux-ppc64le, cmake_arg: "" }
          - { image_name: linux-xtensa-uclibc, cmake_arg: "" }
          #          - { image_name: manylinux1-x64, cmake_arg: "" }
          #          - { image_name: manylinux1-x86, cmake_arg: "" }
          - { image_name: manylinux2010-x64, cmake_arg: "" }
          - { image_name: manylinux2010-x86, cmake_arg: "" }
          - { image_name: manylinux2014-x64, cmake_arg: "" }
          #          - { image_name: manylinux2014-aarch64, cmake_arg: "" }
          - { image_name: manylinux2010-x86, cmake_arg: "" }
          - { image_name: windows-static-x64, cmake_arg: "" }
          - { image_name: windows-static-x64-posix, cmake_arg: "" }
          - { image_name: windows-static-x86, cmake_arg: "" }
          - { image_name: windows-shared-x64, cmake_arg: "" }
          - { image_name: windows-shared-x64-posix, cmake_arg: "" }
          - { image_name: windows-shared-x86, cmake_arg: "" }
          - {
              image_name: windows-armv7,
              cmake_arg: "-DCMAKE_BUILD_WITH_INSTALL_RPATH=ON",
            }
          - {
              image_name: windows-arm64,
              cmake_arg: "-DCMAKE_BUILD_WITH_INSTALL_RPATH=ON",
            }
          - { image_name: linux-riscv32, cmake_arg: "" }
          - { image_name: linux-riscv64, cmake_arg: "" }
          - { image_name: linux-m68k-uclibc, cmake_arg: "" }

        # Disable MinSizeRel RelWithDebInfo, Release, Debug
        build_type: [Release]
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: "Pull docker image: dockcross/${{ matrix.dockcross.image_name }}"
        run: docker pull dockcross/${{ matrix.dockcross.image_name }}:latest

      - name: "Make dockcross script: dockcross-${{ matrix.dockcross.image_name }}"
        run: |
          docker run --rm dockcross/${{ matrix.dockcross.image_name }} > ./dockcross-${{ matrix.dockcross.image_name }}
          chmod +x ./dockcross-${{ matrix.dockcross.image_name }}

      - name: "Config CMake build"
        run: ./dockcross-${{ matrix.dockcross.image_name }} cmake -B build -S . -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ${{ matrix.dockcross.cmake_arg }}

      - name: "Build"
        run: ./dockcross-${{ matrix.dockcross.image_name }} ninja -C build

      - name: "Checksum and Compress"
        run: |
          chmod +x ./tools/make-release-build.sh
          ./tools/make-release-build.sh && mv gta-local.tar.xz gta-${{ matrix.dockcross.image_name }}.tar.xz

      - name: "Save binaries"
        uses: actions/upload-artifact@v2
        with:
          name: bin-artifact
          path: gta-${{ matrix.dockcross.image_name }}.tar.xz
          retention-days: 1
  release:
    name: release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "ðŸ“¥ Checkout Code"
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 0
      - name: get artifact
        uses: actions/download-artifact@v2
        with:
          name: bin-artifact
          path: .
      - name: "âœ… checksum"
        run: find . -maxdepth 1 -name "*.tar.xz" | xargs sha256sum > checksum_all.sha256
      - uses: "marvinpinto/action-automatic-releases@latest"
        name: "ðŸ“¤ upload to github"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            LICENSE
            *.tar.xz
            *.sha256
