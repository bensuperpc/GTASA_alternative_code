name: gta_sa

on:
  push:
    branches:
    - '*'
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches:
    - '*'
  schedule:
    - cron: '0 0 */7 * *'  # https://crontab.guru/#0_7_*_*_1
  workflow_dispatch:

jobs:
  image:
    name: build ${{ matrix.arch_name }} ${{ matrix.build_type }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
      # Disable linux-armv6
        arch_name: [android-arm, android-arm64, android-x86, android-x86_64, web-wasm, linux-arm64, linux-arm64-musl, linux-armv5, linux-armv5-musl, linux-armv6, linux-armv6-musl, linux-armv7, linux-armv7a, linux-armv7l-musl, linux-x64-clang, linux-s390x, linux-x64, linux-x86, linux-mips, linux-ppc64le, manylinux1-x64, manylinux1-x86, manylinux2010-x64, manylinux2010-x86, manylinux2014-x64, manylinux2014-x86, manylinux2014-aarch64, windows-static-x64, windows-static-x64-posix, windows-static-x86, windows-shared-x64, windows-shared-x64-posix, windows-shared-x86, linux-riscv64, linux-riscv32]
        build_type: [Release, Debug, RelWithDebInfo, MinSizeRel]
    steps:
      - name: "üì• Checkout Code"
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: "üõ†Ô∏è cmake"
        run: ./builder/cmake.sh ${{ matrix.arch_name }}:latest -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
      - name: "üõ†Ô∏è make"
        if: matrix.arch_name != 'web-wasm' && matrix.arch_name != 'linux-armv6' && matrix.arch_name != 'manylinux2014-aarch64' && matrix.arch_name != 'manylinux1-x64' && matrix.arch_name != 'manylinux1-x86'
        run: ./builder/makefile.sh ${{ matrix.arch_name }}:latest
      - name: "üõ†Ô∏è docker"
        run: make docker