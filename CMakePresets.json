{
  "version": 2,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 14,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "cmake-pedantic",
      "hidden": true,
      "warnings": {
        "dev": true,
        "deprecated": true,
        "uninitialized": true,
        "unusedCli": true,
        "systemVars": false
      },
      "errors": {
        "dev": false,
        "deprecated": false
      }
    },
    {
      "name": "dev-mode",
      "hidden": true,
      "inherits": "cmake-pedantic",
      "cacheVariables": {
        "GTA_SA_cheat_finder_DEVELOPER_MODE": "ON"
      }
    },
    {
      "name": "cppcheck",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_CPPCHECK": "cppcheck;--inline-suppr"
      }
    },
    {
      "name": "clang-tidy",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_CLANG_TIDY": "clang-tidy;--header-filter=${sourceDir}/*",
        "CMAKE_C_CLANG_TIDY": "clang-tidy;--header-filter=${sourceDir}/*"
      }
    },
    {
      "name": "ci-std",
      "description": "This preset makes sure the project actually builds with at least the specified standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_EXTENSIONS": "ON",
        "CMAKE_CXX_STANDARD": "20",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON",
        "CMAKE_C_EXTENSIONS": "ON",
        "CMAKE_C_STANDARD": "11",
        "CMAKE_C_STANDARD_REQUIRED": "ON"
      }
    },
    {
      "name": "ci-cuda",
      "description": "This preset makes sure the project actually builds with at least the specified standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CUDA_STANDARD": "17",
        "CMAKE_CUDA_STANDARD_REQUIRED": "ON",
        "CMAKE_CUDA_EXTENSIONS": "OFF"
      }
    },
    {
      "name": "flags-unix",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-Wall -Wextra -Wpedantic -Wconversion -Wcast-qual -Wshadow -Wformat=2 -Wundef -Wfloat-equal -Wstrict-overflow=5 -Wswitch-default -Wunreachable-code -Wcast-align -Wmissing-include-dirs",
        "CMAKE_C_FLAGS": "-Wall -Wextra -Wpedantic -Wconversion -Wcast-qual -Wshadow -Wformat=2 -Wundef -Wfloat-equal -Wstrict-overflow=5 -Wswitch-default -Wunreachable-code -Wcast-align -Wmissing-include-dirs"
      }
    },
    {
      "name": "flags-cuda",
      "hidden": true,
      "cacheVariables": {
        "CUDA_NVCC_FLAGS": "--default-stream per-thread -arch=all-major",
        "CUDA_PROPAGATE_HOST_FLAGS": "ON",
        "CUDA_SEPARABLE_COMPILATION": "ON"
      }
    },
    {
      "name": "flags-windows",
      "description": "Note that all the flags after /W4 are required for MSVC to conform to the language standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "/utf-8 /W4 /permissive- /volatile:iso /Zc:preprocessor /EHsc /Zc:__cplusplus /Zc:externConstexpr /Zc:throwingNew"
      }
    },
    {
      "name": "ci-unix",
      "generator": "Unix Makefiles",
      "hidden": true,
      "inherits": ["flags-unix", "ci-std", "ci-cuda"],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      }
    },
    {
      "name": "ci-base",
      "generator": "Ninja",
      "hidden": true,
      "inherits": ["ci-std", "flags-unix", "dev-mode", "ci-cuda"],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      }
    },
    {
      "name": "ci-win64",
      "inherits": ["flags-windows", "ci-std"],
      "generator": "Visual Studio 17 2022",
      "architecture": "x64",
      "hidden": true
    },
    {
      "name": "coverage-unix",
      "binaryDir": "${sourceDir}/build/coverage",
      "inherits": "ci-unix",
      "hidden": true,
      "cacheVariables": {
        "ENABLE_COVERAGE": "ON",
        "CMAKE_BUILD_TYPE": "Coverage",
        "CMAKE_CXX_FLAGS_COVERAGE": "-Og -g --coverage -fkeep-inline-functions -fkeep-static-functions",
        "CMAKE_EXE_LINKER_FLAGS_COVERAGE": "--coverage",
        "CMAKE_SHARED_LINKER_FLAGS_COVERAGE": "--coverage"
      }
    },
    {
      "name": "ci-coverage",
      "inherits": ["coverage-unix", "dev-mode"],
      "cacheVariables": {
        "COVERAGE_HTML_COMMAND": ""
      }
    },
    {
      "name": "ci-sanitize",
      "binaryDir": "${sourceDir}/build/sanitize",
      "inherits": ["ci-unix", "dev-mode"],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Sanitize",
        "CMAKE_CXX_FLAGS_SANITIZE": "-O2 -g -fsanitize=address,undefined,leak -fno-omit-frame-pointer -fno-common"
      },
      "environment": {
        "ASAN_OPTIONS": "strict_string_checks=1 detect_stack_use_after_return=1 check_initialization_order=1 strict_init_order=1 detect_leaks=1",
        "UBSAN_OPTIONS": "print_stacktrace=1"
      }
    },
    {
      "name": "ci-build",
      "binaryDir": "${sourceDir}/build",
      "hidden": true
    },
    {
      "name": "base",
      "binaryDir": "${sourceDir}/build/base",
      "inherits": ["ci-base"],
      "hidden": false
    },
    {
      "name": "base-clang",
      "binaryDir": "${sourceDir}/build/base-clang",
      "inherits": ["ci-base"],
      "hidden": false,
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang++"
      }
    },
    {
      "name": "ci-macos",
      "inherits": ["ci-build", "ci-unix", "dev-mode"]
    },
    {
      "name": "ci-ubuntu",
      "inherits": ["ci-build", "ci-unix", "clang-tidy", "cppcheck", "dev-mode"]
    },
    {
      "name": "ci-windows",
      "inherits": ["ci-build", "ci-win64", "dev-mode"]
    }
  ]
}
